@using Microsoft.Extensions.Options
@using Microsoft.Identity.Web
@using aad_alt_exp.UserVariableTokenCache
@inject IOptions<MicrosoftIdentityOptions> AzureADB2COptions
@inject MsalClientFactory msalClientFactory

@{
    var options = AzureADB2COptions.Value;
    var client = msalClientFactory.CreateForIdentifier(User);
    var accounts = await client.GetAccountsAsync();
}

<ul class="navbar-nav">
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="aad" asp-page="Authorize">
                <span class="text-dark">@((accounts.Any() ? $"Azure AD: {accounts.FirstOrDefault().Username}" : "Authorize AAD"))</span>
            </a>
    </li>
@if (User.Identity.IsAuthenticated)
{
        @if (!string.IsNullOrEmpty(options.EditProfilePolicyId))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="EditProfile">
                    <span class="text-dark">Hello @User.Identity.Name!</span>
                </a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <span class="navbar-text text-dark">Hello @User.Identity.Name!</span>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="SignOut">Sign out</a>
        </li>
}
else
{
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="MicrosoftIdentity" asp-controller="Account" asp-action="SignIn">Sign in</a>
        </li>
}
</ul>
